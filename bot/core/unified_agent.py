"""
–£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç

–ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ Claude Code SDK –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
–ø–æ –∞–Ω–∞–ª–æ–≥–∏–∏ —Å Claude Desktop
"""

import logging
from typing import Optional

from .interfaces import Message, Response
from ..services.claude_code_service import claude_code_service

logger = logging.getLogger(__name__)


class UnifiedAgent:
    """
    –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç —Å –ø—Ä—è–º—ã–º –≤—ã–∑–æ–≤–æ–º Claude Code SDK
    
    –ü–æ–≤—Ç–æ—Ä—è–µ—Ç –ª–æ–≥–∏–∫—É Claude Desktop:
    - –ü–æ–ª—É—á–∞–µ—Ç –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    - –ü–µ—Ä–µ–¥–∞–µ—Ç –Ω–∞–ø—Ä—è–º—É—é –≤ Claude Code SDK
    - SDK —Å–∞–º –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å—Ö–µ–º—ã MCP –∏ –≤—ã–∑—ã–≤–∞–µ—Ç –Ω—É–∂–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    """
    
    def __init__(self):
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞"""
        self.claude_service = claude_code_service
        logger.info("‚úÖ UnifiedAgent –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å Claude Code SDK")
        
    async def process_message(self, message: Message) -> Response:
        """
        –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ Claude Code SDK
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            
        Returns:
            Response –æ—Ç Claude Code SDK
        """
        logger.info(f"üì® UnifiedAgent: —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.user.id} -> Claude Code SDK")
        
        try:
            # –ü–µ—Ä–µ–¥–∞–µ–º –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —è–∑—ã–∫ –Ω–∞–ø—Ä—è–º—É—é –≤ Claude Code SDK
            result = await self.claude_service.execute_natural_request(
                text=message.text,
                user_id=str(message.user.id)
            )
            
            if result.get("success"):
                logger.info("‚úÖ Claude Code SDK —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ")
                return Response(
                    text=result.get("response", "–í—ã–ø–æ–ª–Ω–µ–Ω–æ"),
                    metadata={
                        "agent": "ClaudeCodeSDK",
                        "success": True
                    }
                )
            else:
                logger.warning(f"‚ö†Ô∏è Claude Code SDK –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É: {result.get('error')}")
                return Response(
                    text=f"–û—à–∏–±–∫–∞: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}",
                    metadata={
                        "agent": "ClaudeCodeSDK", 
                        "success": False,
                        "error": result.get("error")
                    }
                )
            
        except Exception as e:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤—ã–∑–æ–≤–∞ Claude Code SDK: {e}", exc_info=True)
            return Response(
                text="–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è.",
                metadata={"error": str(e), "agent": "UnifiedAgent"}
            )
            
    async def clear_user_memory(self, user_id: int) -> bool:
        """
        –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ - Claude Code SDK –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∏—Å—Ç–æ—Ä–∏—é
        
        Args:
            user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            
        Returns:
            True –≤—Å–µ–≥–¥–∞
        """
        logger.info(f"üßπ –û—á–∏—Å—Ç–∫–∞ –ø–∞–º—è—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} (–∑–∞–≥–ª—É—à–∫–∞ - SDK –±–µ–∑ –∏—Å—Ç–æ—Ä–∏–∏)")
        return True
        
    def get_status(self) -> dict:
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç–∞—Ç—É—Å Claude Code SDK
        
        Returns:
            –°–ª–æ–≤–∞—Ä—å —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º —Å–∏—Å—Ç–µ–º—ã
        """
        return {
            "agent": "ClaudeCodeSDK",
            "enabled": self.claude_service.enabled,
            "mcp_config": str(self.claude_service.mcp_config_path),
            "api_key_set": bool(self.claude_service.api_key)
        }
        
    async def get_agent_for_message(self, message: Message) -> Optional[str]:
        """
        –í—Å–µ–≥–¥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç Claude Code SDK –∫–∞–∫ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–≥–µ–Ω—Ç
        
        Args:
            message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            
        Returns:
            –ò–º—è –∞–≥–µ–Ω—Ç–∞
        """
        return "ClaudeCodeSDK"


# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–≥–µ–Ω—Ç–∞
unified_agent = UnifiedAgent()