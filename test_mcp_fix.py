#!/usr/bin/env python
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π MCP –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –±–µ–∑ –º–∞–ø–ø–∏–Ω–≥–æ–≤
"""
import asyncio
import os
from agent.core.intelligent_agent import IntelligentAgent

async def test_mcp_fix():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—É—é MCP –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π MCP –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ API –∫–ª—é—á
    api_key = os.getenv('OPENAI_API_KEY')
    if not api_key:
        print("‚ùå –ù–µ—Ç OPENAI_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞...")
    agent = IntelligentAgent(api_key=api_key)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–±–ª–µ–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    test_message = "–∫–∞–∫–∏–µ —É –º–µ–Ω—è –µ—Å—Ç—å mcp —Å–µ—Ä–≤–µ—Ä–∞"
    
    print(f"\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: '{test_message}'")
    
    try:
        response = await agent.process_message(
            message=test_message,
            user_id="test_user_123"
        )
        
        print(f"   ‚úÖ –û—Ç–≤–µ—Ç: {response.message[:200]}...")
        print(f"   üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: {response.tool_used}")
        print(f"   üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {response.confidence:.2f}")
        
        if response.tool_response:
            print(f"   üìã –î–∞–Ω–Ω—ã–µ: {response.tool_response.success}")
            if response.tool_response.data:
                print(f"   üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç: {str(response.tool_response.data)[:100]}...")
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_mcp_fix())