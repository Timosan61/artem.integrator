#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—ã–±–æ—Ä –∞–≥–µ–Ω—Ç–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
"""
import asyncio
import logging
from datetime import datetime

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º webhook handler
from bot.webhook.handlers import webhook_handler
from bot.services.intelligent_agent_service import intelligent_agent_service

async def test_agent_selection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—ã–±–æ—Ä –∞–≥–µ–Ω—Ç–∞"""
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞
    test_update = {
        "update_id": 999999,
        "message": {
            "message_id": 9999,
            "from": {
                "id": 229838448,  # Admin ID
                "is_bot": False,
                "first_name": "Artem",
                "username": "aaatema",
                "language_code": "ru"
            },
            "chat": {
                "id": 229838448,
                "first_name": "Artem",
                "username": "aaatema",
                "type": "private"
            },
            "date": int(datetime.now().timestamp()),
            "text": "–ö–∞–∫–∏–µ —É —Ç–µ–±—è –µ—Å—Ç—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã?"
        }
    }
    
    logger.info("=" * 50)
    logger.info("–ü–†–û–í–ï–†–ö–ê INTELLIGENT AGENT SERVICE")
    logger.info("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Intelligent Agent
    if intelligent_agent_service:
        logger.info(f"‚úÖ intelligent_agent_service —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        logger.info(f"   Enabled: {intelligent_agent_service.enabled}")
        logger.info(f"   Available: {intelligent_agent_service.is_available()}")
        
        if intelligent_agent_service.tool_registry:
            tools = intelligent_agent_service.tool_registry.list_tools()
            logger.info(f"   Tools: {tools}")
    else:
        logger.error("‚ùå intelligent_agent_service is None")
    
    logger.info("\n" + "=" * 50)
    logger.info("–û–ë–†–ê–ë–û–¢–ö–ê –°–û–û–ë–©–ï–ù–ò–Ø")
    logger.info("=" * 50)
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    result = await webhook_handler.handle_update(test_update)
    
    logger.info(f"\nüì• –†–µ–∑—É–ª—å—Ç–∞—Ç: {result}")


async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    await test_agent_selection()


if __name__ == "__main__":
    asyncio.run(main())