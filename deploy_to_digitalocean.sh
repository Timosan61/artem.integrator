#!/bin/bash

# Deploy Artem Integrator to DigitalOcean Droplet
# –ò—Å–ø–æ–ª—å–∑—É–µ—Ç MCP DigitalOcean –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ–ø–ª–æ–µ–º

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
DROPLET_IP="104.248.39.106"
DROPLET_USER="coder"
APP_PATH="/home/coder/artem-integrator"
SERVICE_NAME="artem-integrator"
GITHUB_REPO="https://github.com/anetov/artem.integrator.git"
DOMAIN="artem.example.com"  # –ò–∑–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –¥–æ–º–µ–Ω

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç—É—Å–∞
print_status() {
    echo -e "${BLUE}[*]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[‚úì]${NC} $1"
}

print_error() {
    echo -e "${RED}[‚úó]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[!]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è SSH –∫–ª—é—á–∞
check_ssh_key() {
    print_status "–ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –¥–æ—Å—Ç—É–ø–∞ –∫ droplet..."
    
    if ssh -o ConnectTimeout=5 -o BatchMode=yes ${DROPLET_USER}@${DROPLET_IP} exit 2>/dev/null; then
        print_success "SSH –¥–æ—Å—Ç—É–ø –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        return 0
    else
        print_error "SSH –¥–æ—Å—Ç—É–ø –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        print_warning "–î–æ–±–∞–≤—å—Ç–µ –≤–∞—à SSH –∫–ª—é—á –Ω–∞ droplet –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ ssh-copy-id"
        return 1
    fi
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ –Ω–∞ droplet
remote_exec() {
    ssh ${DROPLET_USER}@${DROPLET_IP} "$@"
}

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –Ω–∞ droplet
copy_to_droplet() {
    local source=$1
    local dest=$2
    scp -r "$source" ${DROPLET_USER}@${DROPLET_IP}:"$dest"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–∞ droplet
install_dependencies() {
    print_status "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –Ω–∞ droplet..."
    
    remote_exec << 'EOF'
    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
    sudo apt-get update
    sudo apt-get upgrade -y
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python 3.10+
    sudo apt-get install -y python3.10 python3.10-venv python3-pip
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –¥–ª—è MCP
    curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
    sudo apt-get install -y nodejs
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    sudo apt-get install -y git nginx certbot python3-certbot-nginx supervisor
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Claude Code CLI
    sudo npm install -g @anthropic/claude-code-cli
EOF
    
    print_success "–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
setup_application() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    remote_exec << EOF
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    mkdir -p ${APP_PATH}
    cd ${APP_PATH}
    
    # –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    if [ -d ".git" ]; then
        git pull origin main
    else
        git clone ${GITHUB_REPO} .
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    python3.10 -m venv venv
    
    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    source venv/bin/activate
    pip install --upgrade pip
    pip install -r requirements.txt
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    mkdir -p logs
    mkdir -p data
EOF
    
    print_success "–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ"
}

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
setup_configs() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞ –Ω–∞ droplet
    cat > /tmp/.env.production << 'EOF'
# Telegram Settings
TELEGRAM_TOKEN=your_bot_token_here
TELEGRAM_WEBHOOK_SECRET=your_webhook_secret_here
TELEGRAM_WEBHOOK_URL=https://${DOMAIN}/webhook

# OpenAI Settings
OPENAI_API_KEY=your_openai_key_here

# Anthropic Settings (–¥–ª—è MCP)
ANTHROPIC_API_KEY=your_anthropic_key_here
ANTHROPIC_ENABLED=true

# MCP Settings
MCP_ENABLED=true

# Supabase MCP
SUPABASE_ENABLED=true
SUPABASE_URL=your_supabase_url
SUPABASE_KEY=your_supabase_key

# DigitalOcean MCP
DIGITALOCEAN_ENABLED=true
DIGITALOCEAN_TOKEN=your_do_token

# Context7 MCP
CONTEXT7_ENABLED=true

# Voice Service
VOICE_ENABLED=true

# Admin Users
ADMIN_IDS=your_telegram_id_here

# Server Settings
APP_HOST=0.0.0.0
APP_PORT=8000
ENVIRONMENT=production
EOF
    
    copy_to_droplet /tmp/.env.production ${APP_PATH}/.env
    rm /tmp/.env.production
    
    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ MCP –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    if [ -f "data/mcp-servers.json" ]; then
        copy_to_droplet data/mcp-servers.json ${APP_PATH}/data/
    fi
    
    print_success "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞"
    print_warning "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å .env —Ñ–∞–π–ª —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏!"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–∞
setup_systemd() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ systemd —Å–µ—Ä–≤–∏—Å–∞..."
    
    remote_exec << EOF
    sudo tee /etc/systemd/system/${SERVICE_NAME}.service > /dev/null << 'SERVICE'
[Unit]
Description=Artem Integrator Telegram Bot
After=network.target

[Service]
Type=simple
User=coder
WorkingDirectory=${APP_PATH}
Environment="PATH=${APP_PATH}/venv/bin:/usr/local/bin:/usr/bin:/bin"
ExecStart=${APP_PATH}/venv/bin/python -m uvicorn bot.webhook:app --host 0.0.0.0 --port 8000
Restart=always
RestartSec=10

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
StandardOutput=append:${APP_PATH}/logs/bot.log
StandardError=append:${APP_PATH}/logs/bot_error.log

# –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
LimitNOFILE=65536
LimitNPROC=4096

[Install]
WantedBy=multi-user.target
SERVICE

    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ systemd –∏ –∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞
    sudo systemctl daemon-reload
    sudo systemctl enable ${SERVICE_NAME}
    sudo systemctl restart ${SERVICE_NAME}
EOF
    
    print_success "Systemd —Å–µ—Ä–≤–∏—Å –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx
setup_nginx() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx..."
    
    remote_exec << EOF
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Nginx
    sudo tee /etc/nginx/sites-available/${SERVICE_NAME} > /dev/null << 'NGINX'
server {
    listen 80;
    server_name ${DOMAIN} ${DROPLET_IP};

    location /webhook {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade \$http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
        proxy_cache_bypass \$http_upgrade;
        
        # –¢–∞–π–º–∞—É—Ç—ã –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    location / {
        proxy_pass http://localhost:8000;
        proxy_http_version 1.1;
        proxy_set_header Host \$host;
        proxy_set_header X-Real-IP \$remote_addr;
        proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto \$scheme;
    }
}
NGINX

    # –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    sudo ln -sf /etc/nginx/sites-available/${SERVICE_NAME} /etc/nginx/sites-enabled/
    sudo nginx -t
    sudo systemctl restart nginx
EOF
    
    print_success "Nginx –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å Let's Encrypt
setup_ssl() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞..."
    
    if [ "$DOMAIN" != "artem.example.com" ]; then
        remote_exec "sudo certbot --nginx -d ${DOMAIN} --non-interactive --agree-tos -m admin@${DOMAIN}"
        print_success "SSL —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø–æ–ª—É—á–µ–Ω"
    else
        print_warning "–ü—Ä–æ–ø—É—Å–∫–∞–µ–º SSL –Ω–∞—Å—Ç—Ä–æ–π–∫—É - –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–µ—Å—Ç–æ–≤—ã–π –¥–æ–º–µ–Ω"
        print_warning "–û–±–Ω–æ–≤–∏—Ç–µ DOMAIN –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: certbot --nginx -d YOUR_DOMAIN"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram webhook
setup_webhook() {
    print_status "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ Telegram webhook..."
    
    remote_exec << 'EOF'
    cd ${APP_PATH}
    source venv/bin/activate
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook
    cat > set_webhook.py << 'SCRIPT'
#!/usr/bin/env python3
import os
import requests
from dotenv import load_dotenv

load_dotenv()

TOKEN = os.getenv('TELEGRAM_TOKEN')
WEBHOOK_URL = os.getenv('TELEGRAM_WEBHOOK_URL')
SECRET = os.getenv('TELEGRAM_WEBHOOK_SECRET')

if not all([TOKEN, WEBHOOK_URL]):
    print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è")
    exit(1)

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook
url = f"https://api.telegram.org/bot{TOKEN}/setWebhook"
data = {
    "url": WEBHOOK_URL,
    "secret_token": SECRET,
    "allowed_updates": ["message", "callback_query", "business_message", "business_connection"]
}

response = requests.post(url, json=data)
result = response.json()

if result.get("ok"):
    print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")
else:
    print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook: {result}")
SCRIPT

    python set_webhook.py
EOF
    
    print_success "Webhook –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
}

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
create_monitoring_script() {
    print_status "–°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    
    cat > monitor_bot.sh << 'EOF'
#!/bin/bash

# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å—Ç–∞—Ç—É—Å–∞ –±–æ—Ç–∞

DROPLET_IP="104.248.39.106"
SERVICE_NAME="artem-integrator"
DROPLET_USER="coder"
APP_PATH="/home/coder/artem-integrator"

echo "üìä –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ Artem Integrator"
echo "================================"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–∞
echo -e "\nüîß –°—Ç–∞—Ç—É—Å systemd —Å–µ—Ä–≤–∏—Å–∞:"
ssh ${DROPLET_USER}@${DROPLET_IP} "sudo systemctl status ${SERVICE_NAME} --no-pager"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
echo -e "\nüìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏:"
ssh ${DROPLET_USER}@${DROPLET_IP} "tail -n 20 ${APP_PATH}/logs/bot.log"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook
echo -e "\nüåê –ü—Ä–æ–≤–µ—Ä–∫–∞ webhook:"
ssh ${DROPLET_USER}@${DROPLET_IP} "cd ${APP_PATH} && source venv/bin/activate && python -c \"
import os, requests
from dotenv import load_dotenv
load_dotenv()
TOKEN = os.getenv('TELEGRAM_TOKEN')
r = requests.get(f'https://api.telegram.org/bot{TOKEN}/getWebhookInfo')
info = r.json()['result']
print(f'URL: {info.get(\"url\", \"Not set\")}')
print(f'Pending updates: {info.get(\"pending_update_count\", 0)}')
print(f'Last error: {info.get(\"last_error_message\", \"None\")}')
\""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ MCP —Å—Ç–∞—Ç—É—Å–∞
echo -e "\nüîå MCP —Å—Ç–∞—Ç—É—Å:"
ssh ${DROPLET_USER}@${DROPLET_IP} "cd ${APP_PATH} && source venv/bin/activate && python -c \"
from bot.core.config import config
print(f'MCP enabled: {config.mcp.enabled}')
print(f'Supabase: {config.mcp.supabase_enabled}')
print(f'DigitalOcean: {config.mcp.digitalocean_enabled}')
print(f'Context7: {config.mcp.context7_enabled}')
\""
EOF
    
    chmod +x monitor_bot.sh
    print_success "–°–∫—Ä–∏–ø—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–æ–∑–¥–∞–Ω: ./monitor_bot.sh"
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è
main() {
    echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ Artem Integrator –Ω–∞ DigitalOcean"
    echo "==========================================================="
    echo "Droplet IP: ${DROPLET_IP}"
    echo ""
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –¥–æ—Å—Ç—É–ø–∞
    if ! check_ssh_key; then
        exit 1
    fi
    
    # –û—Å–Ω–æ–≤–Ω—ã–µ —à–∞–≥–∏ –¥–µ–ø–ª–æ—è
    install_dependencies
    setup_application
    setup_configs
    setup_systemd
    setup_nginx
    setup_ssl
    setup_webhook
    create_monitoring_script
    
    echo ""
    echo "‚úÖ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
    echo ""
    echo "üìã –î–∞–ª—å–Ω–µ–π—à–∏–µ —à–∞–≥–∏:"
    echo "1. –û–±–Ω–æ–≤–∏—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏:"
    echo "   ssh ${DROPLET_USER}@${DROPLET_IP} 'nano ${APP_PATH}/.env'"
    echo ""
    echo "2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ —Å–µ—Ä–≤–∏—Å –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:"
    echo "   ssh ${DROPLET_USER}@${DROPLET_IP} 'sudo systemctl restart ${SERVICE_NAME}'"
    echo ""
    echo "3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å—Ç–∞—Ç—É—Å –±–æ—Ç–∞:"
    echo "   ./monitor_bot.sh"
    echo ""
    echo "4. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –¥–æ–º–µ–Ω –∏ SSL (–µ—Å–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ —Å–≤–æ–π –¥–æ–º–µ–Ω):"
    echo "   - –û–±–Ω–æ–≤–∏—Ç–µ DNS –∑–∞–ø–∏—Å–∏ –¥–ª—è ${DOMAIN}"
    echo "   - –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ssh ${DROPLET_USER}@${DROPLET_IP} 'certbot --nginx -d ${DOMAIN}'"
    echo ""
    echo "üìä –ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
    echo "   –õ–æ–≥–∏: ssh ${DROPLET_USER}@${DROPLET_IP} 'tail -f ${APP_PATH}/logs/bot.log'"
    echo "   –°—Ç–∞—Ç—É—Å: ssh ${DROPLET_USER}@${DROPLET_IP} 'sudo systemctl status ${SERVICE_NAME}'"
    echo "   –†–µ—Å—Ç–∞—Ä—Ç: ssh ${DROPLET_USER}@${DROPLET_IP} 'sudo systemctl restart ${SERVICE_NAME}'"
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@"