#!/usr/bin/env python
"""
–¢–µ—Å—Ç —É–ø—Ä–æ—â–µ–Ω–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã Simple Agent
"""
import asyncio
import os
from agent.core.intelligent_agent import IntelligentAgent

async def test_simple_agent():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—É—é –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Simple Agent")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ API –∫–ª—é—á
    api_key = os.getenv('OPENAI_API_KEY')
    if not api_key:
        print("‚ùå –ù–µ—Ç OPENAI_API_KEY –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return
    
    # –°–æ–∑–¥–∞–µ–º –∞–≥–µ–Ω—Ç–∞
    print("üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–∞...")
    agent = IntelligentAgent(api_key=api_key)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    test_messages = [
        "–ø—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?",
        "–ø–æ–∫–∞–∂–∏ –º–æ–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
        "–∫–∞–∫–∏–µ —É –º–µ–Ω—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö?",
        "—Å–ø–∏—Å–æ–∫ MCP —Å–µ—Ä–≤–µ—Ä–æ–≤",
        "–Ω–∞—Ä–∏—Å—É–π –∫–æ—Ç–∞"
    ]
    
    print("\nüéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π:")
    
    for i, message in enumerate(test_messages, 1):
        print(f"\n{i}. –¢–µ—Å—Ç: '{message}'")
        try:
            response = await agent.process_message(
                message=message,
                user_id="test_user_123"
            )
            
            print(f"   ‚úÖ –û—Ç–≤–µ—Ç: {response.message[:100]}...")
            print(f"   üîß –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: {response.tool_used}")
            print(f"   üìä –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: {response.confidence:.2f}")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞: {e}")
    
    print("\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    asyncio.run(test_simple_agent())