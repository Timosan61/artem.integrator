#!/usr/bin/env python3
"""
–¢–µ—Å—Ç Claude Code SDK —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –æ—Ç–ª–∞–¥–∫–æ–π
"""

import asyncio
import logging
import sys
from pathlib import Path

# –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —É—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ bot –º–æ–¥—É–ª—é
sys.path.insert(0, str(Path(__file__).parent))

async def test_sdk_debug():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SDK —Å –æ—Ç–ª–∞–¥–∫–æ–π"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Claude Code SDK —Å –æ—Ç–ª–∞–¥–∫–æ–π...")
    
    try:
        # –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç SDK
        from claude_code_sdk import query, ClaudeCodeOptions
        
        print("\nüìù –ü—Ä—è–º–æ–π –≤—ã–∑–æ–≤ SDK...")
        messages = []
        
        options = ClaudeCodeOptions(
            mcpServersConfigFile=str(Path("data/mcp-servers.json"))
        )
        
        async for message in query("Check MCP status", options=options):
            msg_type = type(message).__name__
            print(f"  - –¢–∏–ø —Å–æ–æ–±—â–µ–Ω–∏—è: {msg_type}")
            
            if hasattr(message, '__dict__'):
                print(f"    –ê—Ç—Ä–∏–±—É—Ç—ã: {list(message.__dict__.keys())}")
            
            messages.append(message)
            
        print(f"\n‚úÖ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {len(messages)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    asyncio.run(test_sdk_debug())