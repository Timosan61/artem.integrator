#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ endpoints Streamlit –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏
"""

import requests
import json
from datetime import datetime

BASE_URL = "https://artemintegrator-nahdj.ondigitalocean.app"
ADMIN_TOKEN = "secure-admin-token"

def test_current_prompt():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø—Ä–æ–º–ø—Ç–µ"""
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º /debug/current-prompt...")
    
    try:
        url = f"{BASE_URL}/debug/current-prompt"
        response = requests.get(url, timeout=10)
        
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–º–ø—Ç–µ:")
            print(f"  - –§–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {data.get('exists', False)}")
            print(f"  - –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {data.get('last_updated', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            print(f"  - –î–ª–∏–Ω–∞ —Å–∏—Å—Ç–µ–º–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏: {data.get('system_instruction_length', 0)}")
            print(f"  - –î–ª–∏–Ω–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {data.get('welcome_message_length', 0)}")
            
            if "error" in data:
                print(f"  ‚ö†Ô∏è –û—à–∏–±–∫–∞: {data['error']}")
        else:
            print(f"‚ùå Endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω (–Ω–∞—à–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è –µ—â–µ –Ω–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ)")
            print("üîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π /debug/last-updates...")
            
            # –ü—Ä–æ–±—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π endpoint
            url_existing = f"{BASE_URL}/debug/last-updates"
            response_existing = requests.get(url_existing, timeout=10)
            print(f"  –°—Ç–∞—Ç—É—Å —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ endpoint: {response_existing.status_code}")
            if response_existing.status_code == 200:
                data_existing = response_existing.json()
                print(f"  ‚úÖ –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç: {data_existing.get('total_updates', 0)} updates")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

def test_reload_prompt():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç endpoint –¥–ª—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–º–ø—Ç–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π"""
    print("\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º /admin/reload-prompt...")
    
    try:
        url = f"{BASE_URL}/admin/reload-prompt"
        headers = {
            "X-Admin-Token": ADMIN_TOKEN,
            "Content-Type": "application/json"
        }
        
        response = requests.post(url, headers=headers, timeout=10)
        
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –£—Å–ø–µ—à–Ω–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ –ø—Ä–æ–º–ø—Ç–∞:")
            print(f"  - –ò–∑–º–µ–Ω–µ–Ω–∏—è: {data.get('changed', False)}")
            if data.get('changed'):
                print(f"  - –°—Ç–∞—Ä–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {data.get('old_updated', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                print(f"  - –ù–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {data.get('new_updated', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
            else:
                print("  - –ü—Ä–æ–º–ø—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π")
        elif response.status_code == 403:
            print("‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ (403) - –Ω–µ–≤–µ—Ä–Ω—ã–π –∞–¥–º–∏–Ω—Å–∫–∏–π —Ç–æ–∫–µ–Ω")
        elif response.status_code == 404:
            print("‚ùå –ê–¥–º–∏–Ω—Å–∫–∏–µ endpoints –æ—Ç–∫–ª—é—á–µ–Ω—ã (404)")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: HTTP {response.status_code}")
            try:
                error_data = response.json()
                print(f"–î–µ—Ç–∞–ª–∏: {error_data.get('detail', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            except:
                print(f"–û—Ç–≤–µ—Ç: {response.text[:200]}")
                
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

def test_debug_config():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("\n‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä—É–µ–º /debug/config...")
    
    try:
        url = f"{BASE_URL}/debug/config"
        response = requests.get(url, timeout=10)
        
        print(f"Status: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∞:")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–∞–∂–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            admin_info = data.get('admin', {})
            print(f"  - –ê–¥–º–∏–Ω—ã –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã: {admin_info.get('user_ids_count', 0)} ID + {admin_info.get('usernames_count', 0)} usernames")
            
            env_vars = data.get('environment_variables', {})
            print(f"  - ADMIN_TOKEN –Ω–∞—Å—Ç—Ä–æ–µ–Ω: {env_vars.get('ADMIN_TOKEN_configured', False)}")
            print(f"  - VOICE_ENABLED: {env_vars.get('VOICE_ENABLED', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
            print(f"  - BASE_URL: {env_vars.get('BASE_URL', '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')}")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: HTTP {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text[:200]}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")

def main():
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Streamlit –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏ endpoints")
    print(f"üåê –°–µ—Ä–≤–µ—Ä: {BASE_URL}")
    print(f"üîë –¢–æ–∫–µ–Ω: {ADMIN_TOKEN}")
    print(f"üïí –í—Ä–µ–º—è: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoints
    test_current_prompt()
    test_reload_prompt()
    test_debug_config()
    
    print("\n" + "=" * 60)
    print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")

if __name__ == "__main__":
    main()