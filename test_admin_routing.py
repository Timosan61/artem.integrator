#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∫ IntelligentAgent
"""

import sys
import os
from datetime import datetime

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_admin_routing():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é –∞–¥–º–∏–Ω–∞ –∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É –∞–≥–µ–Ω—Ç—É"""
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏
        from bot.core.interfaces import Message, User, UserRole, MessageType
        from bot.core.agent_adapters import IntelligentAgentAdapter, DefaultAgentAdapter
        
        print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
        print("=" * 50)
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞
        admin_user = User(
            id=12345,
            username="test_admin",
            first_name="Test",
            role=UserRole.ADMIN
        )
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ MCP —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞
        mcp_message = Message(
            id=1,
            user=admin_user,
            chat_id=12345,
            text="/mcp apps",
            type=MessageType.TEXT,
            timestamp=datetime.now(),
            metadata={},
            is_business_message=False
        )
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∞
        regular_message = Message(
            id=2,
            user=admin_user,
            chat_id=12345,
            text="–ü—Ä–∏–≤–µ—Ç, –∫–∞–∫ –¥–µ–ª–∞?",
            type=MessageType.TEXT,
            timestamp=datetime.now(),
            metadata={},
            is_business_message=False
        )
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º IntelligentAgent
        print("üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ IntelligentAgentAdapter:")
        intelligent_agent = IntelligentAgentAdapter()
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º MCP –∫–æ–º–∞–Ω–¥—É
            can_handle_mcp = await intelligent_agent.can_handle(mcp_message)
            print(f"   MCP –∫–æ–º–∞–Ω–¥–∞ '/mcp apps': {'‚úÖ –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–¢' if can_handle_mcp else '‚ùå –ù–ï –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–¢'}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å)
            can_handle_regular = await intelligent_agent.can_handle(regular_message)
            print(f"   –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {'‚úÖ –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–¢' if can_handle_regular else '‚ùå –ù–ï –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–¢'}")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è IntelligentAgent: {e}")
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º DefaultAgent
        print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DefaultAgentAdapter:")
        default_agent = DefaultAgentAdapter()
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º MCP –∫–æ–º–∞–Ω–¥—É (–Ω–µ –¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –µ—Å–ª–∏ IntelligentAgent –¥–æ—Å—Ç—É–ø–µ–Ω)
            can_handle_mcp_default = await default_agent.can_handle(mcp_message)
            print(f"   MCP –∫–æ–º–∞–Ω–¥–∞ '/mcp apps': {'‚ö†Ô∏è –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–¢ (fallback)' if can_handle_mcp_default else '‚úÖ –ù–ï –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–¢'}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–¥–æ–ª–∂–µ–Ω –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å)
            can_handle_regular_default = await default_agent.can_handle(regular_message)
            print(f"   –û–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {'‚úÖ –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–¢' if can_handle_regular_default else '‚ùå –ù–ï –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–¢'}")
            
        except Exception as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è DefaultAgent: {e}")
        
        print("\n" + "=" * 50)
        print("üéØ –û–∂–∏–¥–∞–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ:")
        print("   ‚Ä¢ IntelligentAgent: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –í–°–ï —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤")
        print("   ‚Ä¢ DefaultAgent: –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ Business")
        print("   ‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç: IntelligentAgent (90) > DefaultAgent (10)")
        print("   ‚Ä¢ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –í–°–ï–ì–î–ê –∏—Å–ø–æ–ª—å–∑—É—é—Ç IntelligentAgent")
        
        return True
        
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("–ü—Ä–æ–≤–µ—Ä—å—Ç–µ, —á—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        return False
    except Exception as e:
        print(f"‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

async def run_test():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π —Ç–µ—Å—Ç"""
    return test_admin_routing()

if __name__ == "__main__":
    import asyncio
    
    try:
        result = asyncio.run(run_test())
        sys.exit(0 if result else 1)
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)