#!/usr/bin/env python3
"""
–§–∏–Ω–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç MCP –∫–æ–º–∞–Ω–¥—ã
"""

import asyncio
import sys
from pathlib import Path

sys.path.insert(0, str(Path(__file__).parent))

from bot.services.claude_code_service import claude_code_service

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    
    print("\nüéØ –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ MCP –ö–û–ú–ê–ù–î–´")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /mcp apps
    print("\nüì± –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É: /mcp apps")
    result = await claude_code_service.execute_mcp_command("/mcp apps")
    
    if result.get('success'):
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print(f"\nüìù –û—Ç–≤–µ—Ç –¥–ª—è Telegram ({len(result.get('response', ''))} —Å–∏–º–≤–æ–ª–æ–≤):")
        print("-" * 60)
        print(result.get('response', ''))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö
        response = result.get('response', '')
        if "artem-integrator" in response and "DigitalOcean" in response:
            print("\n‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù! MCP –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
            print("üìä –î–∞–Ω–Ω—ã–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è—Ö DigitalOcean")
        else:
            print("\n‚ö†Ô∏è –¢–µ—Å—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω, –Ω–æ –¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–ø–æ–ª–Ω—ã–º–∏")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã")
        print(f"–î–µ—Ç–∞–ª–∏: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –∫–æ–º–∞–Ω–¥—ã
    print("\n\nüìã –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É: /mcp status")
    status_result = await claude_code_service.execute_mcp_command("/mcp status")
    
    if status_result.get('success'):
        print("‚úÖ –ö–æ–º–∞–Ω–¥–∞ status –≤—ã–ø–æ–ª–Ω–µ–Ω–∞")
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤
        status_text = status_result.get('response', '')[:500]
        print(f"üìù –ö—Ä–∞—Ç–∫–∏–π –æ—Ç–≤–µ—Ç: {status_text}...")

if __name__ == "__main__":
    asyncio.run(main())