version: '3.8'

services:
  # Основной бот
  bot:
    build:
      context: .
      dockerfile: docker/bot/Dockerfile
    container_name: artem-bot
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - WEBHOOK_SECRET_TOKEN=${WEBHOOK_SECRET_TOKEN}
      - DEBUG=${DEBUG:-true}
      - VOICE_ENABLED=${VOICE_ENABLED:-true}
      - MCP_ENABLED=true
      - CLOUDFLARE_TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    networks:
      - artem-network
    depends_on:
      - mcp-supabase
      - mcp-digitalocean
      - mcp-context7
      - mcp-cloudflare
    restart: unless-stopped

  # Cloudflare Tunnel для замены ngrok
  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: artem-cloudflared
    command: tunnel --no-autoupdate run
    environment:
      - TUNNEL_TOKEN=${CLOUDFLARE_TUNNEL_TOKEN}
    networks:
      - artem-network
    restart: unless-stopped

  # MCP сервер для Supabase
  mcp-supabase:
    build:
      context: .
      dockerfile: docker/mcp/Dockerfile.supabase
    container_name: artem-mcp-supabase
    environment:
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      - MCP_SERVER_NAME=supabase
    volumes:
      - ./data/mcp:/data
    networks:
      - artem-network
    restart: unless-stopped

  # MCP сервер для DigitalOcean
  mcp-digitalocean:
    build:
      context: .
      dockerfile: docker/mcp/Dockerfile.digitalocean
    container_name: artem-mcp-digitalocean
    environment:
      - DIGITALOCEAN_API_TOKEN=${DIGITALOCEAN_API_TOKEN}
      - MCP_SERVER_NAME=digitalocean
    volumes:
      - ./data/mcp:/data
    networks:
      - artem-network
    restart: unless-stopped

  # MCP сервер для Context7 (документация)
  mcp-context7:
    build:
      context: .
      dockerfile: docker/mcp/Dockerfile.context7
    container_name: artem-mcp-context7
    environment:
      - CONTEXT7_API_KEY=${CONTEXT7_API_KEY}
      - MCP_SERVER_NAME=context7
    volumes:
      - ./data/mcp:/data
    networks:
      - artem-network
    restart: unless-stopped

  # MCP сервер для Cloudflare
  mcp-cloudflare:
    build:
      context: .
      dockerfile: docker/mcp/Dockerfile.cloudflare
    container_name: artem-mcp-cloudflare
    environment:
      - CLOUDFLARE_API_TOKEN=${CLOUDFLARE_API_TOKEN}
      - CLOUDFLARE_ACCOUNT_ID=${CLOUDFLARE_ACCOUNT_ID}
      - MCP_SERVER_NAME=cloudflare
    volumes:
      - ./data/mcp:/data
    networks:
      - artem-network
    restart: unless-stopped

  # Redis для кеширования и очередей (опционально)
  redis:
    image: redis:7-alpine
    container_name: artem-redis
    networks:
      - artem-network
    restart: unless-stopped

networks:
  artem-network:
    driver: bridge

volumes:
  mcp-data: