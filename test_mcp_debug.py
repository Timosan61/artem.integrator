#!/usr/bin/env python3
"""
–û—Ç–ª–∞–¥–æ—á–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è MCP –∫–æ–º–∞–Ω–¥
"""

import asyncio
import logging
import sys
from pathlib import Path

# –î–µ—Ç–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('mcp_debug.log'),
        logging.StreamHandler()
    ]
)

sys.path.insert(0, str(Path(__file__).parent))

from dotenv import load_dotenv
import os
load_dotenv()

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
os.environ["ANTHROPIC_BASE_URL"] = "https://api.moonshot.ai/anthropic"
os.environ["ANTHROPIC_AUTH_TOKEN"] = "sk-QNnXEpPxnV9OCIhr6IMUcXQu2b4Vsuq2biZVAFce0KIoUTsx"

from bot.services.claude_code_service import ClaudeCodeService

async def test_mcp_debug():
    """–û—Ç–ª–∞–¥–∫–∞ MCP –∫–æ–º–∞–Ω–¥—ã"""
    
    print("\nüîç –û—Ç–ª–∞–¥–∫–∞ MCP –∫–æ–º–∞–Ω–¥—ã /mcp apps")
    print("=" * 60)
    
    service = ClaudeCodeService()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ–º–ø—Ç
    prompt = service._format_mcp_prompt("/mcp apps")
    print(f"\nüìù –ü—Ä–æ–º–ø—Ç: {prompt}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã
    tools = service._get_allowed_tools("/mcp apps")
    print(f"\nüîß –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:")
    for tool in tools:
        print(f"   - {tool}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç
    sys_prompt = service._get_system_prompt()
    print(f"\nüí¨ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç:")
    print("-" * 40)
    print(sys_prompt[:200] + "...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é MCP
    import json
    if service.mcp_config_path.exists():
        with open(service.mcp_config_path) as f:
            config = json.load(f)
            print(f"\nüìã MCP —Å–µ—Ä–≤–µ—Ä—ã –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:")
            for server in config.get("mcpServers", {}):
                print(f"   - {server}")

if __name__ == "__main__":
    asyncio.run(test_mcp_debug())