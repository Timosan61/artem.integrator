#!/usr/bin/env python3
"""
–ß–∏—Å—Ç—ã–π —Ç–µ—Å—Ç –±–µ–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö MCP —Å–µ—Ä–≤–µ—Ä–æ–≤
"""

import asyncio
import os
import sys
from pathlib import Path

# –û—á–∏—â–∞–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏ Cloudflare MCP
os.environ.pop("CLOUDFLARE_API_TOKEN", None)
os.environ.pop("CLOUDFLARE_ACCOUNT_ID", None)

# –£–¥–∞–ª—è–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏ –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º
os.environ["MCP_CONFIG_PATH"] = str(Path(__file__).parent / "data" / "mcp-servers-local.json")

sys.path.insert(0, str(Path(__file__).parent))

from dotenv import load_dotenv
load_dotenv()

# Moonshot API
os.environ["ANTHROPIC_BASE_URL"] = "https://api.moonshot.ai/anthropic"
os.environ["ANTHROPIC_AUTH_TOKEN"] = "sk-QNnXEpPxnV9OCIhr6IMUcXQu2b4Vsuq2biZVAFce0KIoUTsx"

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ—Å–ª–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
from bot.services.claude_code_service import ClaudeCodeService

async def test_clean():
    """–ß–∏—Å—Ç—ã–π —Ç–µ—Å—Ç"""
    
    print("\nüßπ –ß–∏—Å—Ç—ã–π —Ç–µ—Å—Ç DigitalOcean MCP")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    print("\nüìã –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è:")
    print(f"  - DIGITALOCEAN_API_TOKEN: {'‚úÖ' if os.getenv('DIGITALOCEAN_API_TOKEN') else '‚ùå'}")
    print(f"  - CLOUDFLARE_API_TOKEN: {'‚úÖ' if os.getenv('CLOUDFLARE_API_TOKEN') else '‚ùå'}")
    print(f"  - MCP_CONFIG_PATH: {os.getenv('MCP_CONFIG_PATH', 'Not set')}")
    
    service = ClaudeCodeService()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    await asyncio.sleep(1)
    
    print("\nüì® –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É: /mcp digitalocean list apps")
    result = await service.execute_mcp_command("/mcp digitalocean list apps")
    
    print(f"\n‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get('success')}")
    
    if result.get('response'):
        response = result.get('response', '')
        print(f"\nüìù –û—Ç–≤–µ—Ç ({len(response)} —Å–∏–º–≤–æ–ª–æ–≤):")
        print("-" * 60)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        if "error" in response.lower() or "permission" in response.lower():
            print("‚ùå –ü–æ–ª—É—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ –∏–ª–∏ –æ—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ")
            print(response[:500])
        elif "digitalocean" in response.lower() or "app-" in response:
            print("‚úÖ –ü–æ–ª—É—á–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ DigitalOcean!")
            print(response[:1000])
        else:
            print("‚ö†Ô∏è –ü–æ–ª—É—á–µ–Ω –æ–±—â–∏–π –æ—Ç–≤–µ—Ç")
            print(response[:500])

if __name__ == "__main__":
    asyncio.run(test_clean())